#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<stdbool.h>
#include<ctype.h>
#include<malloc.h> 
#include<time.h>
#define ll long long
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a<b?a:b
#define eps 1e-10
#define BLOCK_SIZE 20;
char input[100];
char change[100];
int bottle[10];
char symbol[5];
int  deletechar(int length){
    int i=0;
    int k=0;
    for(i=0;i<length;i++){
        if(change[i]==' '){
			continue;
        }
        else{
        	input[k++]=change[i];
		}
    }
    return k;
}
int rank(char input){
    if(input=='+'||input=='-'){
        return 1;
    }
    else if(input=='='){
        return 0;
    }
    else{
        return 2;
    }
}
int  work(char work,int num1,int num2){
    if(work=='+'){
        return num1 + num2;
    }
    else if(work=='-'){
        return num1 - num2;
    }
    else if(work=='*'){
        return num1*num2;
    }
    else{
        return num1/num2;
    }
}
int putin(int *base){
	int i;
	int out=0;
	for(i=*base;;i++){
		if(input[i]>='0'&&input[i]<='9'){
			out=out*10+(int)(input[i]-'0');
			*base+=1;
		}
		else if(input[i]==' '){
			continue;
		}
		else{
			break;
		}
	}
	return out;
}
void sum(int length){
    int base=0;
    bottle[0]=putin(&base);
    symbol[0]=input[base++];
    int flag=0;
    while(symbol[0]!='='){
    	if(flag==0){
    	bottle[1]=putin(&base);
        symbol[1]=symbol[0];
        symbol[0]=input[base++];
		}
		else{
			symbol[0]=input[base++];
		}
        if(rank(symbol[0])<=rank(symbol[1])){
            bottle[0]=work(symbol[1],bottle[0],bottle[1]);
            flag=0;
        }
        else{
            bottle[2]=putin(&base);
            bottle[1]=work(symbol[0],bottle[1],bottle[2]);
            
            flag=1;
        }
    }
    printf("%d\n",bottle[0]);
}
int main(){
    gets(change);
    int length;
    length=strlen(change);
    length=deletechar(length);
    sum(length);
    //int i=0;
    //for(i=0;i<length;i++){
    //	printf("%c",input[i]);
//}
    return 0;
}